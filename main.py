import asyncio
from aiogram import Bot, Dispatcher, F
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, CallbackQuery
from config import TOKEN
import keyboards as kb

bot = Bot(token=TOKEN)
dp = Dispatcher()

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Å—Ç–æ–µ –º–µ–Ω—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–ü—Ä–∏–≤–µ—Ç" –∏ "–ü–æ–∫–∞"
@dp.message(CommandStart())
async def start(message: Message):
    await message.answer(
        f'–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}! –í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:',
        reply_markup=kb.simple_menu
    )

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ reply-–∫–Ω–æ–ø–∫–∏ "–ü—Ä–∏–≤–µ—Ç"
@dp.message(F.text == "–ü—Ä–∏–≤–µ—Ç")
async def say_hello(message: Message):
    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.first_name}!")

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ reply-–∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞"
@dp.message(F.text == "–ü–æ–∫–∞")
async def say_goodbye(message: Message):
    await message.answer(f"–î–æ —Å–≤–∏–¥–∞–Ω–∏—è, {message.from_user.first_name}!")

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /links ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç 3 –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ —Å URL-—Å—Å—ã–ª–∫–∞–º–∏
@dp.message(Command('links'))
async def show_links(message: Message):
    await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Å—ã–ª–∫—É:", reply_markup=kb.url_links)

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /dynamic ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∫–Ω–æ–ø–∫—É "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ"
@dp.message(Command('dynamic'))
async def dynamic_menu(message: Message):
    await message.answer("–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ:", reply_markup=kb.show_more_button)

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∫–Ω–æ–ø–∫–∏ "–ü–æ–∫–∞–∑–∞—Ç—å –±–æ–ª—å—à–µ"
@dp.callback_query(F.data == 'show_more')
async def show_options(callback: CallbackQuery):
    await callback.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –æ–ø—Ü–∏—é:", reply_markup=kb.options_buttons)

# üìå –û–±—Ä–∞–±–æ—Ç–∫–∞ callback-–∫–Ω–æ–ø–æ–∫ "–û–ø—Ü–∏—è 1" –∏ "–û–ø—Ü–∏—è 2"
@dp.callback_query(F.data.in_(['option_1', 'option_2']))
async def option_selected(callback: CallbackQuery):
    option_text = "–û–ø—Ü–∏—è 1" if callback.data == 'option_1' else "–û–ø—Ü–∏—è 2"
    await callback.answer()
    await callback.message.answer(f"–í—ã –≤—ã–±—Ä–∞–ª–∏: {option_text}")

# üìå –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())
